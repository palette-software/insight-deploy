---
- name: 'Create security group name: "{{ project_name }}_security_group" description: "{{ project_name }} security group" region: "{{ aws_region }}"'
  ec2_group:
      name: "{{ project_name }}_security_group"
      description: "{{ project_name }} security group"
      region: "{{ aws_region }}"
      vpc_id: "{{ vpc.id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        #- proto: tcp
          #type: http
          #from_port: 80
          #to_port: 80
          #cidr_ip: 0.0.0.0/0
        #- proto: tcp
          #type: https
          #from_port: 443
          #to_port: 443
          #cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Create an EC2 key
  ec2_key:
      name: "{{ project_name }}-{{ env }}-key"
      region: "{{ aws_region }}"
  register: ec2_key

- name: save private key
  copy: content="{{ ec2_key.key.private_key }}" dest="./aws-{{ project_name }}-{{ env }}-private.pem" mode=0600
  when: ec2_key.changed

- name: Create an EC2 instance
  ec2:
      key_name: "{{ project_name }}-{{ env }}-key"
      region: "{{ aws_region }}"
      group_id: "{{ basic_firewall.group_id }}"
      instance_type: "{{ instance_type }}"
      vpc_subnet_id: "{{ vpc.subnet_id }}"
      #vpc_id: "{{ vpc_id }}"
      image: "{{ ami }}"
      wait: yes
      instance_tags:
          env: "{{ env }}"
      count_tag: env
      exact_count: 1
  register: ec2


- name: save IP to inventory file
  copy: content="[ec2_hosts]{{'\n'}}{{ item.public_ip }}" dest=./{{ env }}
  with_items: ec2.tagged_instances

- name: Add IP to ec2_hosts group
  add_host: hostname={{ item.public_ip }} groups=ec2_hosts
  with_items: ec2.tagged_instances

