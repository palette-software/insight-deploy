---
- name: Create {{ greenplum_user }} user
  user: name={{ greenplum_user }}

- name: Copy gpdb-limits.conf to raise ulimits
  copy: src=gpadmin-limits.conf dest=/etc/security/limits.d/99-{{ greenplum_user }}-limits.conf

- name: Install gcc (needed to install modules with pip)
  package: name=gcc state=present

- name: install packages needed to run GPDB
  yum: name=python-paramiko,python-pip,net-tools,python-devel

- name: install PIP packages needed to run GPDB
  pip: name={{ gpdb_pip_pkg }}
  with_items:
    - psi
    - lockfile
  loop_control:
    loop_var: gpdb_pip_pkg

- name: Setup sysctl for GreenPlum
  sysctl: name={{ sysctl_flag.name }} value={{ sysctl_flag.value }} state=present sysctl_set=yes
  with_items:
    - { name: "kernel.shmmax", value: 500000000 }
    - { name: "kernel.shmmni", value: 4096 }
    - { name: "kernel.shmall", value: 4000000000 }
    - { name: "kernel.sem", value: 250 512000 100 2048 }
    - { name: "kernel.sysrq", value: 1 }
    - { name: "kernel.core_uses_pid", value: 1 }
    - { name: "kernel.msgmnb", value: 65536 }
    - { name: "kernel.msgmax", value: 65536 }
    - { name: "kernel.msgmni", value: 2048 }
    - { name: "net.ipv4.tcp_syncookies", value: 1 }
    - { name: "net.ipv4.ip_forward", value: 0 }
    - { name: "net.ipv4.conf.default.accept_source_route", value: 0 }
    - { name: "net.ipv4.tcp_tw_recycle", value: 1 }
    - { name: "net.ipv4.tcp_max_syn_backlog", value: 4096 }
    - { name: "net.ipv4.conf.all.arp_filter", value: 1 }
    - { name: "net.ipv4.ip_local_port_range", value: 1025 65535 }
    - { name: "net.core.netdev_max_backlog", value: 10000 }
    - { name: "net.core.rmem_max", value: 2097152 }
    - { name: "net.core.wmem_max", value: 2097152 }
    - { name: "vm.overcommit_memory", value: 2 }
    - { name: "vm.overcommit_ratio", value: 95 }
  loop_control:
    loop_var: sysctl_flag


- name: Reload sysctl
  command: /sbin/sysctl -p

- name: Set disk device to have a read-ahead (blockdev) of 16384 for all mounted devices
  command: /sbin/blockdev --setra 16384 {{ blockdev_flag.device }}
  with_items: "{{ ansible_mounts }}"
  loop_control:
    loop_var: blockdev_flag


- name: Add GreenPlum-required boot flags to the kernel (elevator=deadline transparent_hugepage=never)
  grubconf: flag={{ gp_boot_flag.name }} value={{ gp_boot_flag.value }}
  with_items:
    - { name: elevator, value: deadline }
    - { name: transparent_hugepage, value: never }
  loop_control:
    loop_var: gp_boot_flag

# FIXME: add a stable reboot here
